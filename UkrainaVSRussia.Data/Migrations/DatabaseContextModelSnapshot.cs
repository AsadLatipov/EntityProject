// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using EntityProject.Data.Contexts;

namespace EntityProject.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SubjectTeacher", b =>
                {
                    b.Property<int>("SubjectsId")
                        .HasColumnType("int");

                    b.Property<int>("TeachersId")
                        .HasColumnType("int");

                    b.HasKey("SubjectsId", "TeachersId");

                    b.HasIndex("TeachersId");

                    b.ToTable("SubjectTeacher");
                });

            modelBuilder.Entity("UkrainaVSRussia.Domain.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpenedDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = ".NetBootcamp",
                            OpenedDate = "22.02.2002"
                        },
                        new
                        {
                            Id = 2,
                            Name = "JavaBootcamp",
                            OpenedDate = "22.02.2002"
                        },
                        new
                        {
                            Id = 3,
                            Name = "GoBootcamp",
                            OpenedDate = "22.02.2002"
                        });
                });

            modelBuilder.Entity("UkrainaVSRussia.Domain.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 21,
                            Email = "asad@gmail.com",
                            FirstName = "Asadbek",
                            GroupId = 1,
                            LastName = "Latipov",
                            PhoneNumber = "99 999 99 99"
                        },
                        new
                        {
                            Id = 2,
                            Age = 22,
                            Email = "muboshir@gmail.com",
                            FirstName = "Muboshshir",
                            GroupId = 2,
                            LastName = "Fozilov",
                            PhoneNumber = "99 999 99 99"
                        },
                        new
                        {
                            Id = 3,
                            Age = 21,
                            Email = "homid@gmail.com",
                            FirstName = "Homid",
                            GroupId = 3,
                            LastName = "Rozipv",
                            PhoneNumber = "99 999 99 99"
                        },
                        new
                        {
                            Id = 4,
                            Age = 20,
                            Email = "asad@gmail.com",
                            FirstName = "Orip",
                            GroupId = 1,
                            LastName = "Yuldashev",
                            PhoneNumber = "99 999 99 99"
                        },
                        new
                        {
                            Id = 5,
                            Age = 22,
                            Email = "avaz@gmail.com",
                            FirstName = "Avaz",
                            GroupId = 2,
                            LastName = "Davlatov",
                            PhoneNumber = "99 999 99 99"
                        },
                        new
                        {
                            Id = 6,
                            Age = 22,
                            Email = "umar@gmail.com",
                            FirstName = "Umar",
                            GroupId = 3,
                            LastName = "Mahmudjanov",
                            PhoneNumber = "99 999 99 99"
                        },
                        new
                        {
                            Id = 7,
                            Age = 19,
                            Email = "usmon@gmail.com",
                            FirstName = "Usmon",
                            GroupId = 1,
                            LastName = "Qodirov",
                            PhoneNumber = "99 999 99 99"
                        },
                        new
                        {
                            Id = 8,
                            Age = 21,
                            Email = "abdurahmon@gmail.com",
                            FirstName = "Abdurahmon",
                            GroupId = 2,
                            LastName = "Zafarov",
                            PhoneNumber = "99 999 99 99"
                        },
                        new
                        {
                            Id = 9,
                            Age = 20,
                            Email = "bobur@gmail.com",
                            FirstName = "Bobur",
                            GroupId = 3,
                            LastName = "Boburov",
                            PhoneNumber = "99 999 99 99"
                        },
                        new
                        {
                            Id = 10,
                            Age = 21,
                            Email = "obid@gmail.com",
                            FirstName = "Obid",
                            GroupId = 1,
                            LastName = "Obidov",
                            PhoneNumber = "99 999 99 99"
                        },
                        new
                        {
                            Id = 11,
                            Age = 21,
                            Email = "ahror@gmail.com",
                            FirstName = "Ahror",
                            GroupId = 2,
                            LastName = "Ahrarov",
                            PhoneNumber = "99 999 99 99"
                        },
                        new
                        {
                            Id = 12,
                            Age = 21,
                            Email = "mhriddin@gmail.com",
                            FirstName = "Muhriddin",
                            GroupId = 3,
                            LastName = "Muhriddinov",
                            PhoneNumber = "99 999 99 99"
                        },
                        new
                        {
                            Id = 13,
                            Age = 22,
                            Email = "tohirov@gmail.com",
                            FirstName = "Tohir",
                            GroupId = 1,
                            LastName = "Tohirov",
                            PhoneNumber = "99 999 99 99"
                        });
                });

            modelBuilder.Entity("UkrainaVSRussia.Domain.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "dotnet"
                        },
                        new
                        {
                            Id = 2,
                            Name = "java"
                        },
                        new
                        {
                            Id = 3,
                            Name = "go"
                        },
                        new
                        {
                            Id = 4,
                            Name = "foundation"
                        });
                });

            modelBuilder.Entity("UkrainaVSRussia.Domain.Models.SubjectTeacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SubjectTeachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SubjectId = 1,
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 2,
                            SubjectId = 1,
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 3,
                            SubjectId = 2,
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 4,
                            SubjectId = 2,
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 5,
                            SubjectId = 3,
                            TeacherId = 5
                        },
                        new
                        {
                            Id = 6,
                            SubjectId = 3,
                            TeacherId = 6
                        },
                        new
                        {
                            Id = 7,
                            SubjectId = 4,
                            TeacherId = 5
                        },
                        new
                        {
                            Id = 8,
                            SubjectId = 4,
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 9,
                            SubjectId = 4,
                            TeacherId = 3
                        });
                });

            modelBuilder.Entity("UkrainaVSRussia.Domain.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Department = "Education",
                            Experience = 9,
                            FirstName = "Muhammadkarim",
                            GroupId = 1,
                            LastName = "To'xtaboyev"
                        },
                        new
                        {
                            Id = 2,
                            Department = "Education",
                            Experience = 9,
                            FirstName = "Javohir",
                            GroupId = 1,
                            LastName = "Buzrukov"
                        },
                        new
                        {
                            Id = 3,
                            Department = "Education",
                            Experience = 9,
                            FirstName = "O'tkirbek",
                            GroupId = 2,
                            LastName = "Sobirov"
                        },
                        new
                        {
                            Id = 4,
                            Department = "Education",
                            Experience = 9,
                            FirstName = "Abduvohid",
                            GroupId = 2,
                            LastName = "Karimov"
                        },
                        new
                        {
                            Id = 5,
                            Department = "Education",
                            Experience = 9,
                            FirstName = "Davron",
                            GroupId = 3,
                            LastName = "Yusupov"
                        },
                        new
                        {
                            Id = 6,
                            Department = "Education",
                            Experience = 9,
                            FirstName = "Tohir",
                            GroupId = 3,
                            LastName = "Fozilov"
                        });
                });

            modelBuilder.Entity("SubjectTeacher", b =>
                {
                    b.HasOne("UkrainaVSRussia.Domain.Models.Subject", null)
                        .WithMany()
                        .HasForeignKey("SubjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UkrainaVSRussia.Domain.Models.Teacher", null)
                        .WithMany()
                        .HasForeignKey("TeachersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UkrainaVSRussia.Domain.Models.Student", b =>
                {
                    b.HasOne("UkrainaVSRussia.Domain.Models.Group", null)
                        .WithMany("Students")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UkrainaVSRussia.Domain.Models.Teacher", b =>
                {
                    b.HasOne("UkrainaVSRussia.Domain.Models.Group", null)
                        .WithMany("Teachers")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UkrainaVSRussia.Domain.Models.Group", b =>
                {
                    b.Navigation("Students");

                    b.Navigation("Teachers");
                });
#pragma warning restore 612, 618
        }
    }
}
